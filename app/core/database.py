# —Ç–µ—Å—Ç–æ–≤—ã–π –±–ª–æ–∫ delete
import os, logging
logging.basicConfig(level=logging.INFO)
logging.info(f"üìÇ Current working directory: {os.getcwd()}")
#

from app.core.base import Base
from sqlalchemy import create_engine
from sqlalchemy.orm import sessionmaker

from app.core.settings import get_settings

# 2) –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥—É–ª—å —Å –º–æ–¥–µ–ª—è–º–∏ ‚Äî –æ–Ω–∏ —Å—Ä–∞–∑—É –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É—é—Ç—Å—è –≤ –Ω–∞—à–µ–º Base
import app.models  # noqa: F401

# 3) –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ Engine
settings = get_settings()
engine = create_engine(
    settings.sqlite_url,
    connect_args={"check_same_thread": False},
)

# —Ç–µ—Å—Ç–æ–≤—ã–π –±–ª–æ–∫ delete
import logging
logging.basicConfig(level=logging.INFO)
logging.info(f"=== SQLite URL in use: {settings.sqlite_url} ===")

# 4) –§–∞–±—Ä–∏–∫–∞ —Å–µ—Å—Å–∏–π
SessionLocal = sessionmaker(
    autocommit=False,
    autoflush=False,
    bind=engine
)

# 5) –°–æ–∑–¥–∞—ë–º –≤—Å–µ —Ç–∞–±–ª–∏—Ü—ã, –∫–æ—Ç–æ—Ä—ã—Ö –µ—â—ë –Ω–µ—Ç
Base.metadata.create_all(bind=engine)

# delete
import logging
logging.info(f"üéØ –¢–∞–±–ª–∏—Ü—ã, –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –≤ Base.metadata: {list(Base.metadata.tables.keys())}")
