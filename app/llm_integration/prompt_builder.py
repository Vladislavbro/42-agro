# Код для формирования промптов для LLM 

import logging
import os
import json
import datetime

def load_mapping_file(file_path: str) -> str:
    """Загружает содержимое файла справочника.

    Args:
        file_path: Путь к файлу справочника.

    Returns:
        Содержимое файла в виде строки.

    Raises:
        FileNotFoundError: Если файл не найден по указанному пути.
        IOError: Если произошла ошибка при чтении файла.
    """
    if not os.path.exists(file_path):
        logging.error(f"Файл справочника не найден: {file_path}")
        raise FileNotFoundError(f"Файл справочника не найден: {file_path}")
    
    try:
        with open(file_path, 'r', encoding='utf-8') as f:
            content = f.read()
        return content
    except IOError as e:
        logging.error(f"Ошибка чтения файла справочника {file_path}: {e}")
        raise IOError(f"Ошибка чтения файла справочника {file_path}: {e}")


# Шаблон промпта для детального извлечения данных
prompt_template="""
Проанализируй следующее сообщение с отчетом о сельскохозяйственных работах:
---
{input_message}
---

Используй следующие справочники для распознавания терминов и определения значений:

СПИСОК КУЛЬТУР:
{cultures_content}

СПИСОК ОПЕРАЦИЙ:
{operations_content}

СПИСОК ПОДРАЗДЕЛЕНИЙ:
{departments_content}

ЗАДАЧА:
1.  Найди **все** уникальные комбинации (Операция, Культура, Подразделение), логически связанные в тексте сообщения.
2.  Для **каждой** такой комбинации извлеки связанные с ней числовые данные: "За день, га", "С начала операции, га", "Вал за день, ц", "Вал с начала, ц".
3.  Определи **дату** отчета. Сначала попробуй найти дату в тексте сообщения (например, "25.07", "25 июля"). Если дата в тексте не найдена, используй текущую дату: {current_date}.
4.  Верни результат СТРОГО в формате JSON-списка (`list`), где каждый элемент списка - это JSON-объект (`dict`), представляющий одну найденную комбинацию и её данные.

ИНСТРУКЦИИ ПО ИЗВЛЕЧЕНИЮ ДЛЯ КАЖДОГО ОБЪЕКТА В СПИСКЕ:
- "Дата": Дата отчета в формате YYYY-MM-DD (извлеченная из текста или текущая {current_date}).
- "Подразделение": Определи название подразделения для данной комбинации. Используй номер отделения (Отд), чтобы найти соответствующее подразделение в "СПИСКЕ ПОДРАЗДЕЛЕНИЙ". Если есть несколько "Отд", относящихся к одной записи, ориентируйся на первое или на общие данные по ПУ (Производственному участку), если они есть. Если номер отделения не указан или не найден, попробуй найти название подразделения явно в тексте рядом с операцией/культурой. Если определить не удается, используй null. Не включай ПУ или Отделение в название.
- "Операция": Определи полное название полевой работы из "СПИСКА ОПЕРАЦИЙ", основываясь на тексте, связанном с этой комбинацией (например, "Предп культ" -> "Предпосевная культивация"). Если не указана или не распознана для этой комбинации, используй null.
- "Культура": Определи полное название культуры из "СПИСКА КУЛЬТУР", основываясь на тексте, связанном с этой комбинацией (например, "оз пш" -> "Пшеница озимая"). Если не указана или не распознана для этой комбинации, используй null.
- "За день, га": Количество гектар за день (число перед '/'). Если есть данные по "Отд", суммируй их. Если есть данные "По Пу" и "Отд", используй данные "По Пу". Если не указано, используй null.
- "С начала операции, га": Общее количество гектар с начала операции (число после '/'). Если есть данные по "Отд", суммируй их. Если есть данные "По Пу" и "Отд", используй данные "По Пу". Если не указано, используй null.
- "Вал за день, ц": Валовый сбор за день в центнерах. Если не указано, используй null.
- "Вал с начала, ц": Валовый сбор с начала операции в центнерах. Если не указано, используй null.

ОБРАТИ ВНИМАНИЕ: 
1. Если в сообщении указано:
Пахота зяби под мн тр
По Пу 26/488
Отд 12 26/221
то бери информацию только по ПУ - так как это данные сразу по производственному участку, а все строчки где указано "Отд" относятся к отдельным отделениям. (которые суммируются в случае, если значение "По Пу" не указано)
2. Если в сообщении указано:
Диск к. Сил отд 7. 32/352
Пу- 484
Это значит, что отделение сделало 32 гектара за день, 352 с начала операции, а по производственному участку (ПУ) - 484 гектара. Значит надо выносить цифры 32 гектра за день и 484 гектара с начала операции.


ДОПОЛНИТЕЛЬНЫЕ ТРЕБОВАНИЯ:
- Результатом должен быть JSON-список (`list`). Каждый элемент списка - JSON-объект (`dict`).
- Если сообщение не содержит данных о работах или их не удается извлечь, верни пустой список `[]`.
- Возвращай ТОЛЬКО JSON список, без какого-либо дополнительного текста, комментариев или объяснений до или после JSON.

ТРЕБУЕМЫЙ ФОРМАТ JSON-Списка:
[
  {{
    "Дата": "YYYY-MM-DD", 
    "Подразделение": str | null,
    "Операция": str | null,
    "Культура": str | null,
    "За день, га": float | int | null,
    "С начала операции, га": float | int | null,
    "Вал за день, ц": float | int | null,
    "Вал с начала, ц": float | int | null
  }},
  {{
    "Дата": "YYYY-MM-DD", 
    "Подразделение": str | null,
    "Операция": str | null,
    "Культура": str | null,
    "За день, га": float | int | null,
    "С начала операции, га": float | int | null,
    "Вал за день, ц": float | int | null,
    "Вал с начала, ц": float | int | null
  }}
  // ... и так далее для каждой найденной комбинации
]

ПРИМЕР ОЖИДАЕМОГО ВЫВОДА для сообщения:
"Север 26.07\nОтд7 пах с св 41/501\nОтд20 пах с св 20/281 по пу 61/793\nОтд 3 пах подс.60/231"
[
  {{
    "Дата": "2024-07-26", 
    "Подразделение": "АОР",
    "Операция": "Пахота", 
    "Культура": "Свекла сахарная", 
    "За день, га": 61, 
    "С начала операции, га": 793, 
    "Вал за день, ц": null,
    "Вал с начала, ц": null
  }},
  {{
    "Дата": "2024-07-26", 
    "Подразделение": "АОР",
    "Операция": "Пахота", 
    "Культура": "Подсолнечник товарный", 
    "За день, га": 60, 
    "С начала операции, га": 231, 
    "Вал за день, ц": null,
    "Вал с начала, ц": null
  }}
]
"""

def build_detailed_extraction_prompt(
    input_message: str, 
    cultures_content: str, 
    operations_content: str, 
    departments_content: str, 
    current_date: str | None = None
) -> str:
    """Формирует промпт для извлечения детальных данных из агро-отчета.

    Args:
        input_message: Текст сообщения.
        cultures_content: Содержимое файла со списком культур.
        operations_content: Содержимое файла со списком операций.
        departments_content: Содержимое файла со списком подразделений.
        current_date: Текущая дата в формате YYYY-MM-DD. Если None, используется сегодняшняя.

    Returns:
        Готовый текст промпта для LLM.
    """
    if current_date is None:
        current_date = datetime.date.today().isoformat()
        
    return prompt_template.format(
        input_message=input_message,
        cultures_content=cultures_content,
        operations_content=operations_content,
        departments_content=departments_content,
        current_date=current_date
    )

